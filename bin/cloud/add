#!/bin/bash

keytab=/root/hadder.keytab
keyuser=hadder

clientname=$1
clientip=$2
onetimepass=$3
cluster=$4
directoryappliance=`hostname -f`
domain=`hostname -d`
realm=$(echo $domain | sed -e 's/\(.*\)/\U\1/')

check_cluster() {

  if [ -z $cluster ];
  then
    check_node
  else
  if [ ! "$(ipa dnszone-find | grep "${cluster}.${domain}." | awk '{print $3}')" == "${cluster}.${domain}." ];
  then
    if [ ! -z $cluster ];
    then
        ipa dnszone-add $cluster.$domain --name-server $directoryappliance. >> /dev/null 2>&1
        ipa dnsrecord-add $domain $cluster --ns-rec=$directoryappliance. >> /dev/null 2>&1
    fi
  fi
  fi

}

check_hostgroup() {

    if [ -z $cluster ];
    then
        hostgroupsearch=$(ipa hostgroup-find |
                          grep "Host-group:" |
                          grep "${domain}")
        if [ -z "$hostgroupsearch" ];
        then
            ipa hostgroup-add ${domain} \
                --desc "Host group for ${domain} infrastructure hosts"
        elif [ ! -z "$hostgroupsearch" ];
        then
            if [ "$(ipa hostgroup-show ${domain} | grep "${clientname}.${domain}")" ];
            then
                ipa hostgroup-remove-member ${domain} --hosts=${clientname}.${domain}
            fi
        fi
    elif [ ! -z $cluster ];
    then
        hostgroupsearch=$(ipa hostgroup-find |
                          grep "Host-group:" |
                          grep "${cluster}.${domain}")
        if [ -z "$hostgroupsearch" ];
        then
            ipa hostgroup-add ${cluster}.${domain} \
                --desc "Host group for ${cluster} cluster hosts"
        elif [ ! -z "$hostgroupsearch" ];
        then
            if [ "$(ipa hostgroup-show ${domain} | grep "${clientname}.${cluster}.${domain}")" ];
            then
                ipa hostgroup-remove-member ${cluster}.${domain} --hosts=${clientname}.${domain}
            fi
        fi
    fi

}

check_node() {

  zonefile=/tmp/zones.$$
  ipa dnszone-find |
      grep "Zone\ name:" |
      grep -v "in-addr.arpa" |
      awk '{print $3}' > $zonefile
  while read -r line
  do
      if [ "$(ipa dnsrecord-find $line | grep $clientip)" ];
      then
          echo "FAILED - AN ENTRY WITH $clientip EXISTS"
          exit 1
      fi
  done < "$zonefile"
  rm -f $zonefile
  if [ -z $cluster ];
  then
    domainrecords=$(ipa dnsrecord-find $domain $clientname |
                    grep "${clientname}" |
                    awk '{print $3}')
    if [ "$domainrecords" == "$clientname" ];
    then
        ipa host-del $clientname.$domain --updatedns --continue
    fi
  else
    domainrecords=$(ipa dnsrecord-find $cluster.$domain $clientname |
                    grep "${clientname}" |
                    awk '{print $3}')
    if [ "$domainrecords" == "$clientname" ];
    then
        ipa host-del $clientname.$cluster.$realm --updatedns --continue
    fi
    echo "OK"
    add_node >> /dev/null 2>&1
  fi

}

add_node() {

    if [ -z $cluster ];
    then
        ipa host-add $clientname.$domain --ip-address=$clientip
        ipa host-mod $clientname.$domain --password="${onetimepass}"
        ipa hostgroup-add-member usernodes --hosts $clientname.$domain
    elif [ ! -z $cluster ];
    then
        ipa host-add $clientname.$cluster.$domain --ip-address=$clientip
        ipa host-mod $clientname.$cluster.$domain --password="${onetimepass}"
        ipa hostgroup-add-member usernodes --hosts $clientname.$cluster.$domain
    fi
    echo "OK"

}

if [[ -z $clientname || -z $clientip || -z $onetimepass ]];
then

  echo "One or more parameters not provided"
  echo "Usage: $0 <client name> <client ip> <cluster (optional)> <one time password>"

else

  kinit -kt $keytab $keyuser
  check_cluster
  check_node

fi
